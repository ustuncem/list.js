{"version":3,"file":"list.js","sources":["webpack://List/./src/add-async.js","webpack://List/./src/filter.js","webpack://List/./src/fuzzy-search.js","webpack://List/./src/index.js","webpack://List/./src/item.js","webpack://List/./src/pagination.js","webpack://List/./src/parse.js","webpack://List/./src/search.js","webpack://List/./src/sort.js","webpack://List/./src/templater.js","webpack://List/./src/utils/classes.js","webpack://List/./src/utils/events.js","webpack://List/./src/utils/extend.js","webpack://List/./src/utils/fuzzy.js","webpack://List/./src/utils/get-attribute.js","webpack://List/./src/utils/get-by-class.js","webpack://List/./src/utils/index-of.js","webpack://List/./src/utils/to-array.js","webpack://List/./src/utils/to-string.js","webpack://List/./node_modules/string-natural-compare/natural-compare.js","webpack://List/webpack/bootstrap","webpack://List/webpack/startup"],"sourcesContent":["module.exports = function (list) {\r\n  var addAsync = function (values, callback, items) {\r\n    var valuesToAdd = values.splice(0, 50)\r\n    items = items || []\r\n    items = items.concat(list.add(valuesToAdd))\r\n    if (values.length > 0) {\r\n      setTimeout(function () {\r\n        addAsync(values, callback, items)\r\n      }, 1)\r\n    } else {\r\n      list.update()\r\n      callback(items)\r\n    }\r\n  }\r\n  return addAsync\r\n}\r\n","module.exports = function (list) {\r\n  // Add handlers\r\n  list.handlers.filterStart = list.handlers.filterStart || []\r\n  list.handlers.filterComplete = list.handlers.filterComplete || []\r\n\r\n  return function (filterFunction) {\r\n    list.trigger('filterStart')\r\n    list.i = 1 // Reset paging\r\n    list.reset.filter()\r\n    if (filterFunction === undefined) {\r\n      list.filtered = false\r\n    } else {\r\n      list.filtered = true\r\n      var is = list.items\r\n      for (var i = 0, il = is.length; i < il; i++) {\r\n        var item = is[i]\r\n        if (filterFunction(item)) {\r\n          item.filtered = true\r\n        } else {\r\n          item.filtered = false\r\n        }\r\n      }\r\n    }\r\n    list.update()\r\n    list.trigger('filterComplete')\r\n    return list.visibleItems\r\n  }\r\n}\r\n","var classes = require('./utils/classes'),\r\n  events = require('./utils/events'),\r\n  extend = require('./utils/extend'),\r\n  toString = require('./utils/to-string'),\r\n  getByClass = require('./utils/get-by-class'),\r\n  fuzzy = require('./utils/fuzzy')\r\n\r\nmodule.exports = function (list, options) {\r\n  options = options || {}\r\n\r\n  options = extend(\r\n    {\r\n      location: 0,\r\n      distance: 100,\r\n      threshold: 0.4,\r\n      multiSearch: true,\r\n      searchClass: 'fuzzy-search',\r\n    },\r\n    options\r\n  )\r\n\r\n  var fuzzySearch = {\r\n    search: function (searchString, columns) {\r\n      // Substract arguments from the searchString or put searchString as only argument\r\n      var searchArguments = options.multiSearch ? searchString.replace(/ +$/, '').split(/ +/) : [searchString]\r\n\r\n      for (var k = 0, kl = list.items.length; k < kl; k++) {\r\n        fuzzySearch.item(list.items[k], columns, searchArguments)\r\n      }\r\n    },\r\n    item: function (item, columns, searchArguments) {\r\n      var found = true\r\n      for (var i = 0; i < searchArguments.length; i++) {\r\n        var foundArgument = false\r\n        for (var j = 0, jl = columns.length; j < jl; j++) {\r\n          if (fuzzySearch.values(item.values(), columns[j], searchArguments[i])) {\r\n            foundArgument = true\r\n          }\r\n        }\r\n        if (!foundArgument) {\r\n          found = false\r\n        }\r\n      }\r\n      item.found = found\r\n    },\r\n    values: function (values, value, searchArgument) {\r\n      if (values.hasOwnProperty(value)) {\r\n        var text = toString(values[value]).toLowerCase()\r\n\r\n        if (fuzzy(text, searchArgument, options)) {\r\n          return true\r\n        }\r\n      }\r\n      return false\r\n    },\r\n  }\r\n\r\n  events.bind(\r\n    getByClass(list.listContainer, options.searchClass),\r\n    'keyup',\r\n    list.utils.events.debounce(function (e) {\r\n      var target = e.target || e.srcElement // IE have srcElement\r\n      list.search(target.value, fuzzySearch.search)\r\n    }, list.searchDelay)\r\n  )\r\n\r\n  return function (str, columns) {\r\n    list.search(str, columns, fuzzySearch.search)\r\n  }\r\n}\r\n","var naturalSort = require('string-natural-compare'),\r\n  getByClass = require('./utils/get-by-class'),\r\n  extend = require('./utils/extend'),\r\n  indexOf = require('./utils/index-of'),\r\n  events = require('./utils/events'),\r\n  toString = require('./utils/to-string'),\r\n  classes = require('./utils/classes'),\r\n  getAttribute = require('./utils/get-attribute'),\r\n  toArray = require('./utils/to-array')\r\n\r\nmodule.exports = function (id, options, values) {\r\n  var self = this,\r\n    init,\r\n    Item = require('./item')(self),\r\n    addAsync = require('./add-async')(self),\r\n    initPagination = require('./pagination')(self)\r\n\r\n  init = {\r\n    start: function () {\r\n      self.listClass = 'list'\r\n      self.searchClass = 'search'\r\n      self.sortClass = 'sort'\r\n      self.page = 10000\r\n      self.i = 1\r\n      self.items = []\r\n      self.visibleItems = []\r\n      self.matchingItems = []\r\n      self.searched = false\r\n      self.filtered = false\r\n      self.searchColumns = undefined\r\n      self.searchDelay = 0\r\n      self.handlers = { updated: [] }\r\n      self.valueNames = []\r\n      self.utils = {\r\n        getByClass: getByClass,\r\n        extend: extend,\r\n        indexOf: indexOf,\r\n        events: events,\r\n        toString: toString,\r\n        naturalSort: naturalSort,\r\n        classes: classes,\r\n        getAttribute: getAttribute,\r\n        toArray: toArray,\r\n      }\r\n\r\n      self.utils.extend(self, options)\r\n\r\n      self.listContainer = typeof id === 'string' ? document.getElementById(id) : id\r\n      if (!self.listContainer) {\r\n        return\r\n      }\r\n      self.list = getByClass(self.listContainer, self.listClass, true)\r\n\r\n      self.parse = require('./parse')(self)\r\n      self.templater = require('./templater')(self)\r\n      self.search = require('./search')(self)\r\n      self.filter = require('./filter')(self)\r\n      self.sort = require('./sort')(self)\r\n      self.fuzzySearch = require('./fuzzy-search')(self, options.fuzzySearch)\r\n\r\n      this.handlers()\r\n      this.items()\r\n      this.pagination()\r\n\r\n      self.update()\r\n    },\r\n    handlers: function () {\r\n      for (var handler in self.handlers) {\r\n        if (self[handler] && self.handlers.hasOwnProperty(handler)) {\r\n          self.on(handler, self[handler])\r\n        }\r\n      }\r\n    },\r\n    items: function () {\r\n      self.parse(self.list)\r\n      if (values !== undefined) {\r\n        self.add(values)\r\n      }\r\n    },\r\n    pagination: function () {\r\n      if (options.pagination !== undefined) {\r\n        if (options.pagination === true) {\r\n          options.pagination = [{}]\r\n        }\r\n        if (options.pagination[0] === undefined) {\r\n          options.pagination = [options.pagination]\r\n        }\r\n        for (var i = 0, il = options.pagination.length; i < il; i++) {\r\n          initPagination(options.pagination[i])\r\n        }\r\n      }\r\n    },\r\n  }\r\n\r\n  /*\r\n   * Re-parse the List, use if html have changed\r\n   */\r\n  this.reIndex = function () {\r\n    self.items = []\r\n    self.visibleItems = []\r\n    self.matchingItems = []\r\n    self.searched = false\r\n    self.filtered = false\r\n    self.parse(self.list)\r\n  }\r\n\r\n  this.toJSON = function () {\r\n    var json = []\r\n    for (var i = 0, il = self.items.length; i < il; i++) {\r\n      json.push(self.items[i].values())\r\n    }\r\n    return json\r\n  }\r\n\r\n  /*\r\n   * Add object to list\r\n   */\r\n  this.add = function (values, callback) {\r\n    if (values.length === 0) {\r\n      return\r\n    }\r\n    if (callback) {\r\n      addAsync(values.slice(0), callback)\r\n      return\r\n    }\r\n    var added = [],\r\n      notCreate = false\r\n    if (values[0] === undefined) {\r\n      values = [values]\r\n    }\r\n    for (var i = 0, il = values.length; i < il; i++) {\r\n      var item = null\r\n      notCreate = self.items.length > self.page ? true : false\r\n      item = new Item(values[i], undefined, notCreate)\r\n      self.items.push(item)\r\n      added.push(item)\r\n    }\r\n    self.update()\r\n    return added\r\n  }\r\n\r\n  this.show = function (i, page) {\r\n    this.i = i\r\n    this.page = page\r\n    self.update()\r\n    return self\r\n  }\r\n\r\n  /* Removes object from list.\r\n   * Loops through the list and removes objects where\r\n   * property \"valuename\" === value\r\n   */\r\n  this.remove = function (valueName, value, options) {\r\n    var found = 0\r\n    for (var i = 0, il = self.items.length; i < il; i++) {\r\n      if (self.items[i].values()[valueName] == value) {\r\n        self.templater.remove(self.items[i], options)\r\n        self.items.splice(i, 1)\r\n        il--\r\n        i--\r\n        found++\r\n      }\r\n    }\r\n    self.update()\r\n    return found\r\n  }\r\n\r\n  /* Gets the objects in the list which\r\n   * property \"valueName\" === value\r\n   */\r\n  this.get = function (valueName, value) {\r\n    var matchedItems = []\r\n    for (var i = 0, il = self.items.length; i < il; i++) {\r\n      var item = self.items[i]\r\n      if (item.values()[valueName] == value) {\r\n        matchedItems.push(item)\r\n      }\r\n    }\r\n    return matchedItems\r\n  }\r\n\r\n  /*\r\n   * Get size of the list\r\n   */\r\n  this.size = function () {\r\n    return self.items.length\r\n  }\r\n\r\n  /*\r\n   * Removes all items from the list\r\n   */\r\n  this.clear = function () {\r\n    self.templater.clear()\r\n    self.items = []\r\n    return self\r\n  }\r\n\r\n  this.on = function (event, callback) {\r\n    self.handlers[event].push(callback)\r\n    return self\r\n  }\r\n\r\n  this.off = function (event, callback) {\r\n    var e = self.handlers[event]\r\n    var index = indexOf(e, callback)\r\n    if (index > -1) {\r\n      e.splice(index, 1)\r\n    }\r\n    return self\r\n  }\r\n\r\n  this.trigger = function (event) {\r\n    var i = self.handlers[event].length\r\n    while (i--) {\r\n      self.handlers[event][i](self)\r\n    }\r\n    return self\r\n  }\r\n\r\n  this.reset = {\r\n    filter: function () {\r\n      var is = self.items,\r\n        il = is.length\r\n      while (il--) {\r\n        is[il].filtered = false\r\n      }\r\n      return self\r\n    },\r\n    search: function () {\r\n      var is = self.items,\r\n        il = is.length\r\n      while (il--) {\r\n        is[il].found = false\r\n      }\r\n      return self\r\n    },\r\n  }\r\n\r\n  this.update = function () {\r\n    var is = self.items,\r\n      il = is.length\r\n\r\n    self.visibleItems = []\r\n    self.matchingItems = []\r\n    self.templater.clear()\r\n    for (var i = 0; i < il; i++) {\r\n      if (is[i].matching() && self.matchingItems.length + 1 >= self.i && self.visibleItems.length < self.page) {\r\n        is[i].show()\r\n        self.visibleItems.push(is[i])\r\n        self.matchingItems.push(is[i])\r\n      } else if (is[i].matching()) {\r\n        self.matchingItems.push(is[i])\r\n        is[i].hide()\r\n      } else {\r\n        is[i].hide()\r\n      }\r\n    }\r\n    self.trigger('updated')\r\n    return self\r\n  }\r\n\r\n  init.start()\r\n}\r\n","module.exports = function (list) {\r\n  return function (initValues, element, notCreate) {\r\n    var item = this\r\n\r\n    this._values = {}\r\n\r\n    this.found = false // Show if list.searched == true and this.found == true\r\n    this.filtered = false // Show if list.filtered == true and this.filtered == true\r\n\r\n    var init = function (initValues, element, notCreate) {\r\n      if (element === undefined) {\r\n        if (notCreate) {\r\n          item.values(initValues, notCreate)\r\n        } else {\r\n          item.values(initValues)\r\n        }\r\n      } else {\r\n        item.elm = element\r\n        var values = list.templater.get(item, initValues)\r\n        item.values(values)\r\n      }\r\n    }\r\n\r\n    this.values = function (newValues, notCreate) {\r\n      if (newValues !== undefined) {\r\n        for (var name in newValues) {\r\n          item._values[name] = newValues[name]\r\n        }\r\n        if (notCreate !== true) {\r\n          list.templater.set(item, item.values())\r\n        }\r\n      } else {\r\n        return item._values\r\n      }\r\n    }\r\n\r\n    this.show = function () {\r\n      list.templater.show(item)\r\n    }\r\n\r\n    this.hide = function () {\r\n      list.templater.hide(item)\r\n    }\r\n\r\n    this.matching = function () {\r\n      return (\r\n        (list.filtered && list.searched && item.found && item.filtered) ||\r\n        (list.filtered && !list.searched && item.filtered) ||\r\n        (!list.filtered && list.searched && item.found) ||\r\n        (!list.filtered && !list.searched)\r\n      )\r\n    }\r\n\r\n    this.visible = function () {\r\n      return item.elm && item.elm.parentNode == list.list ? true : false\r\n    }\r\n\r\n    init(initValues, element, notCreate)\r\n  }\r\n}\r\n","var classes = require('./utils/classes'),\r\n  events = require('./utils/events'),\r\n  List = require('./index')\r\n\r\nmodule.exports = function (list) {\r\n  var isHidden = false\r\n\r\n  var refresh = function (pagingList, options) {\r\n    if (list.page < 1) {\r\n      list.listContainer.style.display = 'none'\r\n      isHidden = true\r\n      return\r\n    } else if (isHidden) {\r\n      list.listContainer.style.display = 'block'\r\n    }\r\n\r\n    var item,\r\n      l = list.totalLength ? list.totalLength : list.matchingItems.length,\r\n      index = list.i,\r\n      page = list.page,\r\n      pages = Math.ceil(l / page),\r\n      currentPage = Math.ceil(index / page),\r\n      innerWindow = options.innerWindow || 2,\r\n      left = options.left || options.outerWindow || 0,\r\n      right = options.right || options.outerWindow || 0\r\n\r\n    right = pages - right\r\n    pagingList.clear()\r\n    for (var i = 1; i <= pages; i++) {\r\n      var className = currentPage === i ? 'active' : ''\r\n\r\n      //console.log(i, left, right, currentPage, (currentPage - innerWindow), (currentPage + innerWindow), className);\r\n\r\n      if (is.number(i, left, right, currentPage, innerWindow)) {\r\n        item = pagingList.add({\r\n          page: i,\r\n          dotted: false,\r\n        })[0]\r\n        if (className) {\r\n          classes(item.elm).add(className)\r\n        }\r\n        item.elm.firstChild.setAttribute('data-i', i)\r\n        item.elm.firstChild.setAttribute('data-page', page)\r\n      } else if (is.dotted(pagingList, i, left, right, currentPage, innerWindow, pagingList.size())) {\r\n        item = pagingList.add({\r\n          page: '...',\r\n          dotted: true,\r\n        })[0]\r\n        classes(item.elm).add('disabled')\r\n      }\r\n    }\r\n  }\r\n\r\n  var is = {\r\n    number: function (i, left, right, currentPage, innerWindow) {\r\n      return this.left(i, left) || this.right(i, right) || this.innerWindow(i, currentPage, innerWindow)\r\n    },\r\n    left: function (i, left) {\r\n      return i <= left\r\n    },\r\n    right: function (i, right) {\r\n      return i > right\r\n    },\r\n    innerWindow: function (i, currentPage, innerWindow) {\r\n      return i >= currentPage - innerWindow && i <= currentPage + innerWindow\r\n    },\r\n    dotted: function (pagingList, i, left, right, currentPage, innerWindow, currentPageItem) {\r\n      return (\r\n        this.dottedLeft(pagingList, i, left, right, currentPage, innerWindow) ||\r\n        this.dottedRight(pagingList, i, left, right, currentPage, innerWindow, currentPageItem)\r\n      )\r\n    },\r\n    dottedLeft: function (pagingList, i, left, right, currentPage, innerWindow) {\r\n      return i == left + 1 && !this.innerWindow(i, currentPage, innerWindow) && !this.right(i, right)\r\n    },\r\n    dottedRight: function (pagingList, i, left, right, currentPage, innerWindow, currentPageItem) {\r\n      if (pagingList.items[currentPageItem - 1].values().dotted) {\r\n        return false\r\n      } else {\r\n        return i == right && !this.innerWindow(i, currentPage, innerWindow) && !this.right(i, right)\r\n      }\r\n    },\r\n  }\r\n\r\n  return function (options) {\r\n    var pagingList = new List(list.listContainer.id, {\r\n      listClass: options.paginationClass || 'pagination',\r\n      item: options.item || \"<li><a class='page' href='#'></a></li>\",\r\n      valueNames: ['page', 'dotted'],\r\n      searchClass: 'pagination-search-that-is-not-supposed-to-exist',\r\n      sortClass: 'pagination-sort-that-is-not-supposed-to-exist',\r\n    })\r\n\r\n    events.bind(pagingList.listContainer, 'click', function (e) {\r\n      var target = e.target || e.srcElement,\r\n        page = list.utils.getAttribute(target, 'data-page'),\r\n        i = list.utils.getAttribute(target, 'data-i')\r\n      if (i) {\r\n        list.show((i - 1) * page + 1, page)\r\n      }\r\n    })\r\n\r\n    list.on('updated', function () {\r\n      refresh(pagingList, options)\r\n    })\r\n    refresh(pagingList, options)\r\n  }\r\n}\r\n","module.exports = function (list) {\r\n  var Item = require('./item')(list)\r\n\r\n  var getChildren = function (parent) {\r\n    var nodes = parent.childNodes,\r\n      items = []\r\n    for (var i = 0, il = nodes.length; i < il; i++) {\r\n      // Only textnodes have a data attribute\r\n      if (nodes[i].data === undefined) {\r\n        items.push(nodes[i])\r\n      }\r\n    }\r\n    return items\r\n  }\r\n\r\n  var parse = function (itemElements, valueNames) {\r\n    for (var i = 0, il = itemElements.length; i < il; i++) {\r\n      list.items.push(new Item(valueNames, itemElements[i]))\r\n    }\r\n  }\r\n  var parseAsync = function (itemElements, valueNames) {\r\n    var itemsToIndex = itemElements.splice(0, 50) // TODO: If < 100 items, what happens in IE etc?\r\n    parse(itemsToIndex, valueNames)\r\n    if (itemElements.length > 0) {\r\n      setTimeout(function () {\r\n        parseAsync(itemElements, valueNames)\r\n      }, 1)\r\n    } else {\r\n      list.update()\r\n      list.trigger('parseComplete')\r\n    }\r\n  }\r\n\r\n  list.handlers.parseComplete = list.handlers.parseComplete || []\r\n\r\n  return function () {\r\n    var itemsToIndex = getChildren(list.list),\r\n      valueNames = list.valueNames\r\n\r\n    if (list.indexAsync) {\r\n      parseAsync(itemsToIndex, valueNames)\r\n    } else {\r\n      parse(itemsToIndex, valueNames)\r\n    }\r\n  }\r\n}\r\n","module.exports = function (list) {\r\n  var item, text, columns, searchString, customSearch\r\n\r\n  var prepare = {\r\n    resetList: function () {\r\n      list.i = 1\r\n      list.templater.clear()\r\n      customSearch = undefined\r\n    },\r\n    setOptions: function (args) {\r\n      if (args.length == 2 && args[1] instanceof Array) {\r\n        columns = args[1]\r\n      } else if (args.length == 2 && typeof args[1] == 'function') {\r\n        columns = undefined\r\n        customSearch = args[1]\r\n      } else if (args.length == 3) {\r\n        columns = args[1]\r\n        customSearch = args[2]\r\n      } else {\r\n        columns = undefined\r\n      }\r\n    },\r\n    setColumns: function () {\r\n      if (list.items.length === 0) return\r\n      if (columns === undefined) {\r\n        columns = list.searchColumns === undefined ? prepare.toArray(list.items[0].values()) : list.searchColumns\r\n      }\r\n    },\r\n    setSearchString: function (s) {\r\n      s = list.utils.toString(s).toLowerCase()\r\n      s = s.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, '\\\\$&') // Escape regular expression characters\r\n      searchString = s\r\n    },\r\n    toArray: function (values) {\r\n      var tmpColumn = []\r\n      for (var name in values) {\r\n        tmpColumn.push(name)\r\n      }\r\n      return tmpColumn\r\n    },\r\n  }\r\n  var search = {\r\n    list: function () {\r\n      // Extract quoted phrases \"word1 word2\" from original searchString\r\n      // searchString is converted to lowercase by List.js\r\n      var words = [],\r\n        phrase,\r\n        ss = searchString\r\n      while ((phrase = ss.match(/\"([^\"]+)\"/)) !== null) {\r\n        words.push(phrase[1])\r\n        ss = ss.substring(0, phrase.index) + ss.substring(phrase.index + phrase[0].length)\r\n      }\r\n      // Get remaining space-separated words (if any)\r\n      ss = ss.trim()\r\n      if (ss.length) words = words.concat(ss.split(/\\s+/))\r\n      for (var k = 0, kl = list.items.length; k < kl; k++) {\r\n        var item = list.items[k]\r\n        item.found = false\r\n        if (!words.length) continue\r\n        for (var i = 0, il = words.length; i < il; i++) {\r\n          var word_found = false\r\n          for (var j = 0, jl = columns.length; j < jl; j++) {\r\n            var values = item.values(),\r\n              column = columns[j]\r\n            if (values.hasOwnProperty(column) && values[column] !== undefined && values[column] !== null) {\r\n              var text = typeof values[column] !== 'string' ? values[column].toString() : values[column]\r\n              if (text.toLowerCase().indexOf(words[i]) !== -1) {\r\n                // word found, so no need to check it against any other columns\r\n                word_found = true\r\n                break\r\n              }\r\n            }\r\n          }\r\n          // this word not found? no need to check any other words, the item cannot match\r\n          if (!word_found) break\r\n        }\r\n        item.found = word_found\r\n      }\r\n    },\r\n    // Removed search.item() and search.values()\r\n    reset: function () {\r\n      list.reset.search()\r\n      list.searched = false\r\n    },\r\n  }\r\n\r\n  var searchMethod = function (str) {\r\n    list.trigger('searchStart')\r\n\r\n    prepare.resetList()\r\n    prepare.setSearchString(str)\r\n    prepare.setOptions(arguments) // str, cols|searchFunction, searchFunction\r\n    prepare.setColumns()\r\n\r\n    if (searchString === '') {\r\n      search.reset()\r\n    } else {\r\n      list.searched = true\r\n      if (customSearch) {\r\n        customSearch(searchString, columns)\r\n      } else {\r\n        search.list()\r\n      }\r\n    }\r\n\r\n    list.update()\r\n    list.trigger('searchComplete')\r\n    return list.visibleItems\r\n  }\r\n\r\n  list.handlers.searchStart = list.handlers.searchStart || []\r\n  list.handlers.searchComplete = list.handlers.searchComplete || []\r\n\r\n  list.utils.events.bind(\r\n    list.utils.getByClass(list.listContainer, list.searchClass),\r\n    'keyup',\r\n    list.utils.events.debounce(function (e) {\r\n      var target = e.target || e.srcElement, // IE have srcElement\r\n        alreadyCleared = target.value === '' && !list.searched\r\n      if (!alreadyCleared) {\r\n        // If oninput already have resetted the list, do nothing\r\n        searchMethod(target.value)\r\n      }\r\n    }, list.searchDelay)\r\n  )\r\n\r\n  // Used to detect click on HTML5 clear button\r\n  list.utils.events.bind(list.utils.getByClass(list.listContainer, list.searchClass), 'input', function (e) {\r\n    var target = e.target || e.srcElement\r\n    if (target.value === '') {\r\n      searchMethod('')\r\n    }\r\n  })\r\n\r\n  return searchMethod\r\n}\r\n","module.exports = function (list) {\r\n  var buttons = {\r\n    els: undefined,\r\n    clear: function () {\r\n      for (var i = 0, il = buttons.els.length; i < il; i++) {\r\n        list.utils.classes(buttons.els[i]).remove('asc')\r\n        list.utils.classes(buttons.els[i]).remove('desc')\r\n      }\r\n    },\r\n    getOrder: function (btn) {\r\n      var predefinedOrder = list.utils.getAttribute(btn, 'data-order')\r\n      if (predefinedOrder == 'asc' || predefinedOrder == 'desc') {\r\n        return predefinedOrder\r\n      } else if (list.utils.classes(btn).has('desc')) {\r\n        return 'asc'\r\n      } else if (list.utils.classes(btn).has('asc')) {\r\n        return 'desc'\r\n      } else {\r\n        return 'asc'\r\n      }\r\n    },\r\n    getInSensitive: function (btn, options) {\r\n      var insensitive = list.utils.getAttribute(btn, 'data-insensitive')\r\n      if (insensitive === 'false') {\r\n        options.insensitive = false\r\n      } else {\r\n        options.insensitive = true\r\n      }\r\n    },\r\n    setOrder: function (options) {\r\n      for (var i = 0, il = buttons.els.length; i < il; i++) {\r\n        var btn = buttons.els[i]\r\n        if (list.utils.getAttribute(btn, 'data-sort') !== options.valueName) {\r\n          continue\r\n        }\r\n        var predefinedOrder = list.utils.getAttribute(btn, 'data-order')\r\n        if (predefinedOrder == 'asc' || predefinedOrder == 'desc') {\r\n          if (predefinedOrder == options.order) {\r\n            list.utils.classes(btn).add(options.order)\r\n          }\r\n        } else {\r\n          list.utils.classes(btn).add(options.order)\r\n        }\r\n      }\r\n    },\r\n  }\r\n\r\n  var sort = function () {\r\n    list.trigger('sortStart')\r\n    var options = {}\r\n\r\n    var target = arguments[0].currentTarget || arguments[0].srcElement || undefined\r\n\r\n    if (target) {\r\n      options.valueName = list.utils.getAttribute(target, 'data-sort')\r\n      buttons.getInSensitive(target, options)\r\n      options.order = buttons.getOrder(target)\r\n    } else {\r\n      options = arguments[1] || options\r\n      options.valueName = arguments[0]\r\n      options.order = options.order || 'asc'\r\n      options.insensitive = typeof options.insensitive == 'undefined' ? true : options.insensitive\r\n    }\r\n\r\n    buttons.clear()\r\n    buttons.setOrder(options)\r\n\r\n    // caseInsensitive\r\n    // alphabet\r\n    var customSortFunction = options.sortFunction || list.sortFunction || null,\r\n      multi = options.order === 'desc' ? -1 : 1,\r\n      sortFunction\r\n\r\n    if (customSortFunction) {\r\n      sortFunction = function (itemA, itemB) {\r\n        return customSortFunction(itemA, itemB, options) * multi\r\n      }\r\n    } else {\r\n      sortFunction = function (itemA, itemB) {\r\n        var sort = list.utils.naturalSort\r\n        sort.alphabet = list.alphabet || options.alphabet || undefined\r\n        if (!sort.alphabet && options.insensitive) {\r\n          sort = list.utils.naturalSort.caseInsensitive\r\n        }\r\n        return sort(itemA.values()[options.valueName], itemB.values()[options.valueName]) * multi\r\n      }\r\n    }\r\n\r\n    list.items.sort(sortFunction)\r\n    list.update()\r\n    list.trigger('sortComplete')\r\n  }\r\n\r\n  // Add handlers\r\n  list.handlers.sortStart = list.handlers.sortStart || []\r\n  list.handlers.sortComplete = list.handlers.sortComplete || []\r\n\r\n  buttons.els = list.utils.getByClass(list.listContainer, list.sortClass)\r\n  list.utils.events.bind(buttons.els, 'click', sort)\r\n  list.on('searchStart', buttons.clear)\r\n  list.on('filterStart', buttons.clear)\r\n\r\n  return sort\r\n}\r\n","var Templater = function (list) {\r\n  var createItem,\r\n    templater = this\r\n\r\n  var init = function () {\r\n    var itemSource\r\n\r\n    if (typeof list.item === 'function') {\r\n      createItem = function (values) {\r\n        var item = list.item(values)\r\n        return getItemSource(item)\r\n      }\r\n      return\r\n    }\r\n\r\n    if (typeof list.item === 'string') {\r\n      if (list.item.indexOf('<') === -1) {\r\n        itemSource = document.getElementById(list.item)\r\n      } else {\r\n        itemSource = getItemSource(list.item)\r\n      }\r\n    } else {\r\n      /* If item source does not exists, use the first item in list as\r\n      source for new items */\r\n      itemSource = getFirstListItem()\r\n    }\r\n\r\n    if (!itemSource) {\r\n      throw new Error(\"The list needs to have at least one item on init otherwise you'll have to add a template.\")\r\n    }\r\n\r\n    itemSource = createCleanTemplateItem(itemSource, list.valueNames)\r\n\r\n    createItem = function () {\r\n      return itemSource.cloneNode(true)\r\n    }\r\n  }\r\n\r\n  var createCleanTemplateItem = function (templateNode, valueNames) {\r\n    var el = templateNode.cloneNode(true)\r\n    el.removeAttribute('id')\r\n\r\n    for (var i = 0, il = valueNames.length; i < il; i++) {\r\n      var elm = undefined,\r\n        valueName = valueNames[i]\r\n      if (valueName.data) {\r\n        for (var j = 0, jl = valueName.data.length; j < jl; j++) {\r\n          el.setAttribute('data-' + valueName.data[j], '')\r\n        }\r\n      } else if (valueName.attr && valueName.name) {\r\n        elm = list.utils.getByClass(el, valueName.name, true)\r\n        if (elm) {\r\n          elm.setAttribute(valueName.attr, '')\r\n        }\r\n      } else {\r\n        elm = list.utils.getByClass(el, valueName, true)\r\n        if (elm) {\r\n          elm.innerHTML = ''\r\n        }\r\n      }\r\n    }\r\n    return el\r\n  }\r\n\r\n  var getFirstListItem = function () {\r\n    var nodes = list.list.childNodes\r\n\r\n    for (var i = 0, il = nodes.length; i < il; i++) {\r\n      // Only textnodes have a data attribute\r\n      if (nodes[i].data === undefined) {\r\n        return nodes[i].cloneNode(true)\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  var getItemSource = function (itemHTML) {\r\n    if (typeof itemHTML !== 'string') return undefined\r\n    if (/<tr[\\s>]/g.exec(itemHTML)) {\r\n      var tbody = document.createElement('tbody')\r\n      tbody.innerHTML = itemHTML\r\n      return tbody.firstElementChild\r\n    } else if (itemHTML.indexOf('<') !== -1) {\r\n      var div = document.createElement('div')\r\n      div.innerHTML = itemHTML\r\n      return div.firstElementChild\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  var getValueName = function (name) {\r\n    for (var i = 0, il = list.valueNames.length; i < il; i++) {\r\n      var valueName = list.valueNames[i]\r\n      if (valueName.data) {\r\n        var data = valueName.data\r\n        for (var j = 0, jl = data.length; j < jl; j++) {\r\n          if (data[j] === name) {\r\n            return { data: name }\r\n          }\r\n        }\r\n      } else if (valueName.attr && valueName.name && valueName.name == name) {\r\n        return valueName\r\n      } else if (valueName === name) {\r\n        return name\r\n      }\r\n    }\r\n  }\r\n\r\n  var setValue = function (item, name, value) {\r\n    var elm = undefined,\r\n      valueName = getValueName(name)\r\n    if (!valueName) return\r\n    if (valueName.data) {\r\n      item.elm.setAttribute('data-' + valueName.data, value)\r\n    } else if (valueName.attr && valueName.name) {\r\n      elm = list.utils.getByClass(item.elm, valueName.name, true)\r\n      if (elm) {\r\n        elm.setAttribute(valueName.attr, value)\r\n      }\r\n    } else {\r\n      elm = list.utils.getByClass(item.elm, valueName, true)\r\n      if (elm) {\r\n        elm.innerHTML = value\r\n      }\r\n    }\r\n  }\r\n\r\n  this.get = function (item, valueNames) {\r\n    templater.create(item)\r\n    var values = {}\r\n    for (var i = 0, il = valueNames.length; i < il; i++) {\r\n      var elm = undefined,\r\n        valueName = valueNames[i]\r\n      if (valueName.data) {\r\n        for (var j = 0, jl = valueName.data.length; j < jl; j++) {\r\n          values[valueName.data[j]] = list.utils.getAttribute(item.elm, 'data-' + valueName.data[j])\r\n        }\r\n      } else if (valueName.attr && valueName.name) {\r\n        elm = list.utils.getByClass(item.elm, valueName.name, true)\r\n        values[valueName.name] = elm ? list.utils.getAttribute(elm, valueName.attr) : ''\r\n      } else {\r\n        elm = list.utils.getByClass(item.elm, valueName, true)\r\n        values[valueName] = elm ? elm.innerHTML : ''\r\n      }\r\n    }\r\n    return values\r\n  }\r\n\r\n  this.set = function (item, values) {\r\n    if (!templater.create(item)) {\r\n      for (var v in values) {\r\n        if (values.hasOwnProperty(v)) {\r\n          setValue(item, v, values[v])\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.create = function (item) {\r\n    if (item.elm !== undefined) {\r\n      return false\r\n    }\r\n    item.elm = createItem(item.values())\r\n    templater.set(item, item.values())\r\n    return true\r\n  }\r\n  this.remove = function (item) {\r\n    if (item.elm.parentNode === list.list) {\r\n      list.list.removeChild(item.elm)\r\n    }\r\n  }\r\n  this.show = function (item) {\r\n    templater.create(item)\r\n    list.list.appendChild(item.elm)\r\n  }\r\n  this.hide = function (item) {\r\n    if (item.elm !== undefined && item.elm.parentNode === list.list) {\r\n      list.list.removeChild(item.elm)\r\n    }\r\n  }\r\n  this.clear = function () {\r\n    /* .innerHTML = ''; fucks up IE */\r\n    if (list.list.hasChildNodes()) {\r\n      while (list.list.childNodes.length >= 1) {\r\n        list.list.removeChild(list.list.firstChild)\r\n      }\r\n    }\r\n  }\r\n\r\n  init()\r\n}\r\n\r\nmodule.exports = function (list) {\r\n  return new Templater(list)\r\n}\r\n","/**\r\n * Module dependencies.\r\n */\r\n\r\nvar index = require('./index-of')\r\n\r\n/**\r\n * Whitespace regexp.\r\n */\r\n\r\nvar re = /\\s+/\r\n\r\n/**\r\n * toString reference.\r\n */\r\n\r\nvar toString = Object.prototype.toString\r\n\r\n/**\r\n * Wrap `el` in a `ClassList`.\r\n *\r\n * @param {Element} el\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function (el) {\r\n  return new ClassList(el)\r\n}\r\n\r\n/**\r\n * Initialize a new ClassList for `el`.\r\n *\r\n * @param {Element} el\r\n * @api private\r\n */\r\n\r\nfunction ClassList(el) {\r\n  if (!el || !el.nodeType) {\r\n    throw new Error('A DOM element reference is required')\r\n  }\r\n  this.el = el\r\n  this.list = el.classList\r\n}\r\n\r\n/**\r\n * Add class `name` if not already present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.add = function (name) {\r\n  // classList\r\n  if (this.list) {\r\n    this.list.add(name)\r\n    return this\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array()\r\n  var i = index(arr, name)\r\n  if (!~i) arr.push(name)\r\n  this.el.className = arr.join(' ')\r\n  return this\r\n}\r\n\r\n/**\r\n * Remove class `name` when present, or\r\n * pass a regular expression to remove\r\n * any which match.\r\n *\r\n * @param {String|RegExp} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.remove = function (name) {\r\n  // classList\r\n  if (this.list) {\r\n    this.list.remove(name)\r\n    return this\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array()\r\n  var i = index(arr, name)\r\n  if (~i) arr.splice(i, 1)\r\n  this.el.className = arr.join(' ')\r\n  return this\r\n}\r\n\r\n/**\r\n * Toggle class `name`, can force state via `force`.\r\n *\r\n * For browsers that support classList, but do not support `force` yet,\r\n * the mistake will be detected and corrected.\r\n *\r\n * @param {String} name\r\n * @param {Boolean} force\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.toggle = function (name, force) {\r\n  // classList\r\n  if (this.list) {\r\n    if ('undefined' !== typeof force) {\r\n      if (force !== this.list.toggle(name, force)) {\r\n        this.list.toggle(name) // toggle again to correct\r\n      }\r\n    } else {\r\n      this.list.toggle(name)\r\n    }\r\n    return this\r\n  }\r\n\r\n  // fallback\r\n  if ('undefined' !== typeof force) {\r\n    if (!force) {\r\n      this.remove(name)\r\n    } else {\r\n      this.add(name)\r\n    }\r\n  } else {\r\n    if (this.has(name)) {\r\n      this.remove(name)\r\n    } else {\r\n      this.add(name)\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n/**\r\n * Return an array of classes.\r\n *\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.array = function () {\r\n  var className = this.el.getAttribute('class') || ''\r\n  var str = className.replace(/^\\s+|\\s+$/g, '')\r\n  var arr = str.split(re)\r\n  if ('' === arr[0]) arr.shift()\r\n  return arr\r\n}\r\n\r\n/**\r\n * Check if class `name` is present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\r\n  return this.list ? this.list.contains(name) : !!~index(this.array(), name)\r\n}\r\n","var bind = window.addEventListener ? 'addEventListener' : 'attachEvent',\r\n  unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',\r\n  prefix = bind !== 'addEventListener' ? 'on' : '',\r\n  toArray = require('./to-array')\r\n\r\n/**\r\n * Bind `el` event `type` to `fn`.\r\n *\r\n * @param {Element} el, NodeList, HTMLCollection or Array\r\n * @param {String} type\r\n * @param {Function} fn\r\n * @param {Boolean} capture\r\n * @api public\r\n */\r\n\r\nexports.bind = function (el, type, fn, capture) {\r\n  el = toArray(el)\r\n  for (var i = 0, il = el.length; i < il; i++) {\r\n    el[i][bind](prefix + type, fn, capture || false)\r\n  }\r\n}\r\n\r\n/**\r\n * Unbind `el` event `type`'s callback `fn`.\r\n *\r\n * @param {Element} el, NodeList, HTMLCollection or Array\r\n * @param {String} type\r\n * @param {Function} fn\r\n * @param {Boolean} capture\r\n * @api public\r\n */\r\n\r\nexports.unbind = function (el, type, fn, capture) {\r\n  el = toArray(el)\r\n  for (var i = 0, il = el.length; i < il; i++) {\r\n    el[i][unbind](prefix + type, fn, capture || false)\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a function, that, as long as it continues to be invoked, will not\r\n * be triggered. The function will be called after it stops being called for\r\n * `wait` milliseconds. If `immediate` is true, trigger the function on the\r\n * leading edge, instead of the trailing.\r\n *\r\n * @param {Function} fn\r\n * @param {Integer} wait\r\n * @param {Boolean} immediate\r\n * @api public\r\n */\r\n\r\nexports.debounce = function (fn, wait, immediate) {\r\n  var timeout\r\n  return wait\r\n    ? function () {\r\n        var context = this,\r\n          args = arguments\r\n        var later = function () {\r\n          timeout = null\r\n          if (!immediate) fn.apply(context, args)\r\n        }\r\n        var callNow = immediate && !timeout\r\n        clearTimeout(timeout)\r\n        timeout = setTimeout(later, wait)\r\n        if (callNow) fn.apply(context, args)\r\n      }\r\n    : fn\r\n}\r\n","/*\r\n * Source: https://github.com/segmentio/extend\r\n */\r\n\r\nmodule.exports = function extend(object) {\r\n  // Takes an unlimited number of extenders.\r\n  var args = Array.prototype.slice.call(arguments, 1)\r\n\r\n  // For each extender, copy their properties on our object.\r\n  for (var i = 0, source; (source = args[i]); i++) {\r\n    if (!source) continue\r\n    for (var property in source) {\r\n      object[property] = source[property]\r\n    }\r\n  }\r\n\r\n  return object\r\n}\r\n","module.exports = function (text, pattern, options) {\r\n  // Aproximately where in the text is the pattern expected to be found?\r\n  var Match_Location = options.location || 0\r\n\r\n  //Determines how close the match must be to the fuzzy location (specified above). An exact letter match which is 'distance' characters away from the fuzzy location would score as a complete mismatch. A distance of '0' requires the match be at the exact location specified, a threshold of '1000' would require a perfect match to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\r\n  var Match_Distance = options.distance || 100\r\n\r\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match (of both letters and location), a threshold of '1.0' would match anything.\r\n  var Match_Threshold = options.threshold || 0.4\r\n\r\n  if (pattern === text) return true // Exact match\r\n  if (pattern.length > 32) return false // This algorithm cannot be used\r\n\r\n  // Set starting location at beginning text and initialise the alphabet.\r\n  var loc = Match_Location,\r\n    s = (function () {\r\n      var q = {},\r\n        i\r\n\r\n      for (i = 0; i < pattern.length; i++) {\r\n        q[pattern.charAt(i)] = 0\r\n      }\r\n\r\n      for (i = 0; i < pattern.length; i++) {\r\n        q[pattern.charAt(i)] |= 1 << (pattern.length - i - 1)\r\n      }\r\n\r\n      return q\r\n    })()\r\n\r\n  // Compute and return the score for a match with e errors and x location.\r\n  // Accesses loc and pattern through being a closure.\r\n\r\n  function match_bitapScore_(e, x) {\r\n    var accuracy = e / pattern.length,\r\n      proximity = Math.abs(loc - x)\r\n\r\n    if (!Match_Distance) {\r\n      // Dodge divide by zero error.\r\n      return proximity ? 1.0 : accuracy\r\n    }\r\n    return accuracy + proximity / Match_Distance\r\n  }\r\n\r\n  var score_threshold = Match_Threshold, // Highest score beyond which we give up.\r\n    best_loc = text.indexOf(pattern, loc) // Is there a nearby exact match? (speedup)\r\n\r\n  if (best_loc != -1) {\r\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold)\r\n    // What about in the other direction? (speedup)\r\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length)\r\n\r\n    if (best_loc != -1) {\r\n      score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold)\r\n    }\r\n  }\r\n\r\n  // Initialise the bit arrays.\r\n  var matchmask = 1 << (pattern.length - 1)\r\n  best_loc = -1\r\n\r\n  var bin_min, bin_mid\r\n  var bin_max = pattern.length + text.length\r\n  var last_rd\r\n  for (var d = 0; d < pattern.length; d++) {\r\n    // Scan for the best match; each iteration allows for one more error.\r\n    // Run a binary search to determine how far from 'loc' we can stray at this\r\n    // error level.\r\n    bin_min = 0\r\n    bin_mid = bin_max\r\n    while (bin_min < bin_mid) {\r\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\r\n        bin_min = bin_mid\r\n      } else {\r\n        bin_max = bin_mid\r\n      }\r\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min)\r\n    }\r\n    // Use the result from this iteration as the maximum for the next.\r\n    bin_max = bin_mid\r\n    var start = Math.max(1, loc - bin_mid + 1)\r\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length\r\n\r\n    var rd = Array(finish + 2)\r\n    rd[finish + 1] = (1 << d) - 1\r\n    for (var j = finish; j >= start; j--) {\r\n      // The alphabet (s) is a sparse hash, so the following line generates\r\n      // warnings.\r\n      var charMatch = s[text.charAt(j - 1)]\r\n      if (d === 0) {\r\n        // First pass: exact match.\r\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch\r\n      } else {\r\n        // Subsequent passes: fuzzy match.\r\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) | (((last_rd[j + 1] | last_rd[j]) << 1) | 1) | last_rd[j + 1]\r\n      }\r\n      if (rd[j] & matchmask) {\r\n        var score = match_bitapScore_(d, j - 1)\r\n        // This match will almost certainly be better than any existing match.\r\n        // But check anyway.\r\n        if (score <= score_threshold) {\r\n          // Told you so.\r\n          score_threshold = score\r\n          best_loc = j - 1\r\n          if (best_loc > loc) {\r\n            // When passing loc, don't exceed our current distance from loc.\r\n            start = Math.max(1, 2 * loc - best_loc)\r\n          } else {\r\n            // Already passed loc, downhill from here on in.\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // No hope for a (better) match at greater error levels.\r\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\r\n      break\r\n    }\r\n    last_rd = rd\r\n  }\r\n\r\n  return best_loc < 0 ? false : true\r\n}\r\n","/**\r\n * A cross-browser implementation of getAttribute.\r\n * Source found here: http://stackoverflow.com/a/3755343/361337 written by Vivin Paliath\r\n *\r\n * Return the value for `attr` at `element`.\r\n *\r\n * @param {Element} el\r\n * @param {String} attr\r\n * @api public\r\n */\r\n\r\nmodule.exports = function (el, attr) {\r\n  var result = (el.getAttribute && el.getAttribute(attr)) || null\r\n  if (!result) {\r\n    var attrs = el.attributes\r\n    var length = attrs.length\r\n    for (var i = 0; i < length; i++) {\r\n      if (attrs[i] !== undefined) {\r\n        if (attrs[i].nodeName === attr) {\r\n          result = attrs[i].nodeValue\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return result\r\n}\r\n","/**\r\n * A cross-browser implementation of getElementsByClass.\r\n * Heavily based on Dustin Diaz's function: http://dustindiaz.com/getelementsbyclass.\r\n *\r\n * Find all elements with class `className` inside `container`.\r\n * Use `single = true` to increase performance in older browsers\r\n * when only one element is needed.\r\n *\r\n * @param {String} className\r\n * @param {Element} container\r\n * @param {Boolean} single\r\n * @api public\r\n */\r\n\r\nvar getElementsByClassName = function (container, className, single) {\r\n  if (single) {\r\n    return container.getElementsByClassName(className)[0]\r\n  } else {\r\n    return container.getElementsByClassName(className)\r\n  }\r\n}\r\n\r\nvar querySelector = function (container, className, single) {\r\n  className = '.' + className\r\n  if (single) {\r\n    return container.querySelector(className)\r\n  } else {\r\n    return container.querySelectorAll(className)\r\n  }\r\n}\r\n\r\nvar polyfill = function (container, className, single) {\r\n  var classElements = [],\r\n    tag = '*'\r\n\r\n  var els = container.getElementsByTagName(tag)\r\n  var elsLen = els.length\r\n  var pattern = new RegExp('(^|\\\\s)' + className + '(\\\\s|$)')\r\n  for (var i = 0, j = 0; i < elsLen; i++) {\r\n    if (pattern.test(els[i].className)) {\r\n      if (single) {\r\n        return els[i]\r\n      } else {\r\n        classElements[j] = els[i]\r\n        j++\r\n      }\r\n    }\r\n  }\r\n  return classElements\r\n}\r\n\r\nmodule.exports = (function () {\r\n  return function (container, className, single, options) {\r\n    options = options || {}\r\n    if ((options.test && options.getElementsByClassName) || (!options.test && document.getElementsByClassName)) {\r\n      return getElementsByClassName(container, className, single)\r\n    } else if ((options.test && options.querySelector) || (!options.test && document.querySelector)) {\r\n      return querySelector(container, className, single)\r\n    } else {\r\n      return polyfill(container, className, single)\r\n    }\r\n  }\r\n})()\r\n","var indexOf = [].indexOf\r\n\r\nmodule.exports = function(arr, obj){\r\n  if (indexOf) return arr.indexOf(obj);\r\n  for (var i = 0, il = arr.length; i < il; ++i) {\r\n    if (arr[i] === obj) return i;\r\n  }\r\n  return -1\r\n}\r\n","/**\r\n * Source: https://github.com/timoxley/to-array\r\n *\r\n * Convert an array-like object into an `Array`.\r\n * If `collection` is already an `Array`, then will return a clone of `collection`.\r\n *\r\n * @param {Array | Mixed} collection An `Array` or array-like object to convert e.g. `arguments` or `NodeList`\r\n * @return {Array} Naive conversion of `collection` to a new `Array`.\r\n * @api public\r\n */\r\n\r\nmodule.exports = function toArray(collection) {\r\n  if (typeof collection === 'undefined') return []\r\n  if (collection === null) return [null]\r\n  if (collection === window) return [window]\r\n  if (typeof collection === 'string') return [collection]\r\n  if (isArray(collection)) return collection\r\n  if (typeof collection.length != 'number') return [collection]\r\n  if (typeof collection === 'function' && collection instanceof Function) return [collection]\r\n\r\n  var arr = [];\r\n  for (var i = 0, il = collection.length; i < il; i++) {\r\n    if (Object.prototype.hasOwnProperty.call(collection, i) || i in collection) {\r\n      arr.push(collection[i])\r\n    }\r\n  }\r\n  if (!arr.length) return []\r\n  return arr\r\n}\r\n\r\nfunction isArray(arr) {\r\n  return Object.prototype.toString.call(arr) === '[object Array]'\r\n}\r\n","module.exports = function (s) {\r\n  s = s === undefined ? '' : s\r\n  s = s === null ? '' : s\r\n  s = s.toString()\r\n  return s\r\n}\r\n","'use strict';\n\nvar alphabet;\nvar alphabetIndexMap;\nvar alphabetIndexMapLength = 0;\n\nfunction isNumberCode(code) {\n  return code >= 48 && code <= 57;\n}\n\nfunction naturalCompare(a, b) {\n  var lengthA = (a += '').length;\n  var lengthB = (b += '').length;\n  var aIndex = 0;\n  var bIndex = 0;\n\n  while (aIndex < lengthA && bIndex < lengthB) {\n    var charCodeA = a.charCodeAt(aIndex);\n    var charCodeB = b.charCodeAt(bIndex);\n\n    if (isNumberCode(charCodeA)) {\n      if (!isNumberCode(charCodeB)) {\n        return charCodeA - charCodeB;\n      }\n\n      var numStartA = aIndex;\n      var numStartB = bIndex;\n\n      while (charCodeA === 48 && ++numStartA < lengthA) {\n        charCodeA = a.charCodeAt(numStartA);\n      }\n      while (charCodeB === 48 && ++numStartB < lengthB) {\n        charCodeB = b.charCodeAt(numStartB);\n      }\n\n      var numEndA = numStartA;\n      var numEndB = numStartB;\n\n      while (numEndA < lengthA && isNumberCode(a.charCodeAt(numEndA))) {\n        ++numEndA;\n      }\n      while (numEndB < lengthB && isNumberCode(b.charCodeAt(numEndB))) {\n        ++numEndB;\n      }\n\n      var difference = numEndA - numStartA - numEndB + numStartB; // numA length - numB length\n      if (difference) {\n        return difference;\n      }\n\n      while (numStartA < numEndA) {\n        difference = a.charCodeAt(numStartA++) - b.charCodeAt(numStartB++);\n        if (difference) {\n          return difference;\n        }\n      }\n\n      aIndex = numEndA;\n      bIndex = numEndB;\n      continue;\n    }\n\n    if (charCodeA !== charCodeB) {\n      if (\n        charCodeA < alphabetIndexMapLength &&\n        charCodeB < alphabetIndexMapLength &&\n        alphabetIndexMap[charCodeA] !== -1 &&\n        alphabetIndexMap[charCodeB] !== -1\n      ) {\n        return alphabetIndexMap[charCodeA] - alphabetIndexMap[charCodeB];\n      }\n\n      return charCodeA - charCodeB;\n    }\n\n    ++aIndex;\n    ++bIndex;\n  }\n\n  if (aIndex >= lengthA && bIndex < lengthB && lengthA >= lengthB) {\n    return -1;\n  }\n\n  if (bIndex >= lengthB && aIndex < lengthA && lengthB >= lengthA) {\n    return 1;\n  }\n\n  return lengthA - lengthB;\n}\n\nnaturalCompare.caseInsensitive = naturalCompare.i = function(a, b) {\n  return naturalCompare(('' + a).toLowerCase(), ('' + b).toLowerCase());\n};\n\nObject.defineProperties(naturalCompare, {\n  alphabet: {\n    get: function() {\n      return alphabet;\n    },\n\n    set: function(value) {\n      alphabet = value;\n      alphabetIndexMap = [];\n\n      var i = 0;\n\n      if (alphabet) {\n        for (; i < alphabet.length; i++) {\n          alphabetIndexMap[alphabet.charCodeAt(i)] = i;\n        }\n      }\n\n      alphabetIndexMapLength = alphabetIndexMap.length;\n\n      for (i = 0; i < alphabetIndexMapLength; i++) {\n        if (alphabetIndexMap[i] === undefined) {\n          alphabetIndexMap[i] = -1;\n        }\n      }\n    },\n  },\n});\n\nmodule.exports = naturalCompare;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(352);\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;A;;;;;AChBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAjCA;AAoCA;AAIA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;A;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA1EA;AA6EA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAhBA;AACA;AAkBA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACvQA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC5DA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC5GA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC9CA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AApCA;AAsCA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AA1CA;AACA;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AACA;AA6CA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;A;;;;;ACxnlKA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;A;;;;;ACpEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AClBA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;A;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC/DA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;A;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACjtBA;AACA;AACA;AACA;;A","sourceRoot":""}